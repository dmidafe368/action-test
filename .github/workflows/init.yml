# This is a basic workflow to help you get started with Actions

name: 360t7-2410-self-init

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "test" branch
  # push:
  #   branches: [ "test" ]
  # pull_request:
  #   branches: [ "test" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  FEEDS_CONF: test/feeds.conf.default
  CONFIG_FILE: test/init-1.config
  DIY_P1_SH: test/diy-part1.sh
  DIY_P2_SH: test/diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  OPENWRT_NAME: openwrt
  TZ: Asia/Shanghai
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted,default]
    # runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo sed -i "s|cn.archive.ubuntu.com|mirrors.aliyun.com|g" /etc/apt/sources.list
        sudo sed -i '/^[^#]*deb http\:\/\/security.ubuntu./ s/^/#/'  /etc/apt/sources.list
        sudo -E apt-get -qq update
        # sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        # sudo -E apt-get -qq autoremove --purge
        # sudo -E apt-get -qq clean
        # sudo timedatectl set-timezone "$TZ"
        
    - name: Clone source code
      run: |
        df -hT $PWD 
        ls && echo "ls find test" # checkout is cached
        mkdir test && echo "mkdir test success"
 